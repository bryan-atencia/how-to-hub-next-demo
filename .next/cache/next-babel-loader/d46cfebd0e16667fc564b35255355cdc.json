{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { path, join } from \"path\";\nimport fs from \"fs\";\nexport function getAllCategories() {\n  return _getAllCategories.apply(this, arguments);\n}\n\nfunction _getAllCategories() {\n  _getAllCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var filePath, folder, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filePath = \"./public/admin/collections/Categories\";\n            folder = fs.readdirSync(filePath).map(function (name) {\n              return join(filePath, name);\n            });\n            data = folder.map(function (x) {\n              return JSON.parse(fs.readFileSync(x, 'utf-8'));\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllCategories.apply(this, arguments);\n}\n\nexport function getCategoryIds() {\n  return _getCategoryIds.apply(this, arguments);\n}\n\nfunction _getCategoryIds() {\n  _getCategoryIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var filePath, fileNames;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filePath = \"./public/admin/collections/Categories\";\n            fileNames = fs.readdirSync(filePath);\n            return _context2.abrupt(\"return\", fileNames.map(function (x) {\n              return x.replace(/\\.json$/, ''); //   return {\n              //     params: {\n              //       id: x.replace(/\\.json$/, '')\n              //     }\n              //   }\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getCategoryIds.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/bryanatencia/demo/how-to-hub-next-demo/public/admin/functions/categories/index.js"],"names":["path","join","fs","getAllCategories","filePath","folder","readdirSync","map","name","data","x","JSON","parse","readFileSync","getCategoryIds","fileNames","replace"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,MAA3B;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,gBAAsBC,gBAAtB;AAAA;AAAA;;;+EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,QADC,GACU,uCADV;AAEDC,YAAAA,MAFC,GAEQH,EAAE,CAACI,WAAH,CAAeF,QAAf,EAAyBG,GAAzB,CAA6B,UAAAC,IAAI;AAAA,qBAAIP,IAAI,CAACG,QAAD,EAAWI,IAAX,CAAR;AAAA,aAAjC,CAFR;AAGDC,YAAAA,IAHC,GAGMJ,MAAM,CAACE,GAAP,CAAW,UAAAG,CAAC;AAAA,qBAAIC,IAAI,CAACC,KAAL,CAAWV,EAAE,CAACW,YAAH,CAAgBH,CAAhB,EAAmB,OAAnB,CAAX,CAAJ;AAAA,aAAZ,CAHN;AAAA,6CAIED,IAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBK,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACDV,YAAAA,QADC,GACU,uCADV;AAEDW,YAAAA,SAFC,GAEWb,EAAE,CAACI,WAAH,CAAeF,QAAf,CAFX;AAAA,8CAGEW,SAAS,CAACR,GAAV,CAAc,UAAAG,CAAC,EAAI;AACxB,qBAAOA,CAAC,CAACM,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAP,CADwB,CAE1B;AACA;AACA;AACA;AACA;AACC,aAPM,CAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { path, join } from \"path\"\nimport fs from \"fs\"\n\nexport async function getAllCategories() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let folder = fs.readdirSync(filePath).map(name => join(filePath, name))\n  let data = folder.map(x => JSON.parse(fs.readFileSync(x, 'utf-8')))\n  return data\n}\n\nexport async function getCategoryIds() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let fileNames = fs.readdirSync(filePath)\n  return fileNames.map(x => {\n    return x.replace(/\\.json$/, '')\n  //   return {\n  //     params: {\n  //       id: x.replace(/\\.json$/, '')\n  //     }\n  //   }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}