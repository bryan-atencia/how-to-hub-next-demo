{"ast":null,"code":"import { path, join } from \"path\";\nimport fs from \"fs\";\nexport async function getAllCategories() {\n  let filePath = \"./public/admin/collections/Categories\";\n  let folder = fs.readdirSync(filePath).map(name => join(filePath, name));\n  let data = folder.map(x => JSON.parse(fs.readFileSync(x, 'utf-8')));\n  return data;\n}\nexport async function getCategoryIds() {\n  let filePath = \"./public/admin/collections/Categories\";\n  let fileNames = fs.readdirSync(filePath);\n  return fileNames.map(x => {\n    return x.replace(/\\.json$/, ''); //   return {\n    //     params: {\n    //       id: x.replace(/\\.json$/, '')\n    //     }\n    //   }\n  });\n}","map":{"version":3,"sources":["/Users/bryanatencia/demo/how-to-hub-next-demo/public/admin/functions/categories/index.js"],"names":["path","join","fs","getAllCategories","filePath","folder","readdirSync","map","name","data","x","JSON","parse","readFileSync","getCategoryIds","fileNames","replace"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,MAA3B;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAO,eAAeC,gBAAf,GAAkC;AACvC,MAAIC,QAAQ,GAAG,uCAAf;AACA,MAAIC,MAAM,GAAGH,EAAE,CAACI,WAAH,CAAeF,QAAf,EAAyBG,GAAzB,CAA6BC,IAAI,IAAIP,IAAI,CAACG,QAAD,EAAWI,IAAX,CAAzC,CAAb;AACA,MAAIC,IAAI,GAAGJ,MAAM,CAACE,GAAP,CAAWG,CAAC,IAAIC,IAAI,CAACC,KAAL,CAAWV,EAAE,CAACW,YAAH,CAAgBH,CAAhB,EAAmB,OAAnB,CAAX,CAAhB,CAAX;AACA,SAAOD,IAAP;AACD;AAED,OAAO,eAAeK,cAAf,GAAgC;AACrC,MAAIV,QAAQ,GAAG,uCAAf;AACA,MAAIW,SAAS,GAAGb,EAAE,CAACI,WAAH,CAAeF,QAAf,CAAhB;AACA,SAAOW,SAAS,CAACR,GAAV,CAAcG,CAAC,IAAI;AACxB,WAAOA,CAAC,CAACM,OAAF,CAAU,SAAV,EAAqB,EAArB,CAAP,CADwB,CAE1B;AACA;AACA;AACA;AACA;AACC,GAPM,CAAP;AAQD","sourcesContent":["import { path, join } from \"path\"\nimport fs from \"fs\"\n\nexport async function getAllCategories() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let folder = fs.readdirSync(filePath).map(name => join(filePath, name))\n  let data = folder.map(x => JSON.parse(fs.readFileSync(x, 'utf-8')))\n  return data\n}\n\nexport async function getCategoryIds() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let fileNames = fs.readdirSync(filePath)\n  return fileNames.map(x => {\n    return x.replace(/\\.json$/, '')\n  //   return {\n  //     params: {\n  //       id: x.replace(/\\.json$/, '')\n  //     }\n  //   }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}