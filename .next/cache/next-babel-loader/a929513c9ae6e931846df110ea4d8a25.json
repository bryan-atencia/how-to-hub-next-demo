{"ast":null,"code":"import { path, join } from \"path\";\n\nlet fs = require('fs');\n\nexport function getAllCategories() {\n  let filePath = \"./public/admin/collections/Categories\";\n  let folder = fs.readdirSync(filePath).map(name => join(filePath, name));\n  let data = folder.map(x => JSON.parse(fs.readFileSync(x, 'utf-8')));\n  return data;\n}\nexport function getCategoryIds() {\n  let filePath = \"./public/admin/collections/Categories\";\n  let fileNames = fs.readdirSync(filePath);\n  return fileNames.map(x => {\n    return {\n      params: {\n        id: fileName.replace(/\\.json$/, '')\n      }\n    };\n  });\n}","map":{"version":3,"sources":["/Users/bryanatencia/demo/how-to-hub-next-demo/public/admin/functions/categories/index.js"],"names":["path","join","fs","require","getAllCategories","filePath","folder","readdirSync","map","name","data","x","JSON","parse","readFileSync","getCategoryIds","fileNames","params","id","fileName","replace"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,MAA3B;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEA,OAAO,SAASC,gBAAT,GAA4B;AACjC,MAAIC,QAAQ,GAAG,uCAAf;AACA,MAAIC,MAAM,GAAGJ,EAAE,CAACK,WAAH,CAAeF,QAAf,EAAyBG,GAAzB,CAA6BC,IAAI,IAAIR,IAAI,CAACI,QAAD,EAAWI,IAAX,CAAzC,CAAb;AACA,MAAIC,IAAI,GAAGJ,MAAM,CAACE,GAAP,CAAWG,CAAC,IAAIC,IAAI,CAACC,KAAL,CAAWX,EAAE,CAACY,YAAH,CAAgBH,CAAhB,EAAmB,OAAnB,CAAX,CAAhB,CAAX;AACA,SAAOD,IAAP;AACD;AAED,OAAO,SAASK,cAAT,GAA0B;AAC/B,MAAIV,QAAQ,GAAG,uCAAf;AACA,MAAIW,SAAS,GAAGd,EAAE,CAACK,WAAH,CAAeF,QAAf,CAAhB;AACA,SAAOW,SAAS,CAACR,GAAV,CAAcG,CAAC,IAAI;AACxB,WAAO;AACLM,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEC,QAAQ,CAACC,OAAT,CAAiB,SAAjB,EAA4B,EAA5B;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD","sourcesContent":["import { path, join } from \"path\"\nlet fs = require('fs')\n\nexport function getAllCategories() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let folder = fs.readdirSync(filePath).map(name => join(filePath, name))\n  let data = folder.map(x => JSON.parse(fs.readFileSync(x, 'utf-8')))\n  return data\n}\n\nexport function getCategoryIds() {\n  let filePath = \"./public/admin/collections/Categories\"\n  let fileNames = fs.readdirSync(filePath)\n  return fileNames.map(x => {\n    return {\n      params: {\n        id: fileName.replace(/\\.json$/, '')\n      }\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}